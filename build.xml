<?xml version="1.0" encoding="UTF-8"?>
<!--
	Compile sources to build/main
	Compile tests to build/tests
	Compile test examples to build/examples
	Compile each batch of classpath classes to build/classpaths/x
	Dist: build/main
	Tests to run: build/tests
	Classpath to run tests: build/main, build/tests, build/examples, build/classpath.x
-->

<project name="runtime-suite" default="run.tests">
	<property name="main.src.dir" location="main" />
	<property name="test.src.dir" location="test" />
	<property name="examples.src.dir" location="examples" />

	<property name="lib.dir" location="lib" />

	<property name="build.dir" location="build" />
	<property name="main.build.dir" location="${build.dir}/main" />
	<property name="test.build.dir" location="${build.dir}/tests" />
	<property name="examples.build.dir" location="${build.dir}/examples" />
	<property name="classpaths.build.dir" location="${build.dir}/classpaths" />

	<property name="report.dir" location="reports" />

	<fileset id="main.libs" dir="${lib.dir}">
		<include name="junit/**.jar" />
		<include name="slf4j/**.jar" />
	</fileset>

	<fileset id="test.libs" dir="${lib.dir}">
		<include name="hamcrest/**.jar" />
		<include name="logback/**.jar" />
	</fileset>
	
	<path id="compile.main.classpath">
		<fileset refid="main.libs" />
	</path>

	<path id="compile.examples.classpath">
		<fileset refid="test.libs" />
		<fileset refid="main.libs" />
	</path>

	<path id="compile.tests.classpath">
		<pathelement location="${examples.build.dir}" />
		<pathelement location="${main.build.dir}" />
		<fileset refid="test.libs" />
		<fileset refid="main.libs" />
	</path>
 
	<path id="run.tests.classpath">
		<pathelement location="${test.build.dir}" />
		<pathelement location="${examples.build.dir}" />
		<pathelement location="${main.build.dir}" />
		<fileset refid="test.libs" />
		<fileset refid="main.libs" />
	</path>

	<fileset id="test.classes" dir="${test.build.dir}">
		<include name="**/*.class"/>
	</fileset>

	<target name="compile.main" depends="init">
		<echo>Compiling ${ant.project.name}</echo>
		<mkdir dir="${main.build.dir}" />
		<javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeAntRuntime="false">
			<classpath refid="compile.main.classpath" />
		</javac>
	</target>

	<target name="compile.tests" depends="compile.main, compile.examples">
		<mkdir dir="${test.build.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeAntRuntime="false">
			<classpath refid="compile.tests.classpath" />
		</javac>
	</target>

	<target name="compile.examples">
		<mkdir dir="${examples.build.dir}" />
		<javac srcdir="${examples.src.dir}" destdir="${examples.build.dir}" includeAntRuntime="false">
			<classpath refid="compile.examples.classpath" />
		</javac>
	</target>

	<target name="run.tests" depends="compile.tests">
		<mkdir dir="${report.dir}/xml" />
		<junit haltonfailure="false">
			<classpath refid="run.tests.classpath" />
			<batchtest fork="no" todir="${report.dir}/xml">
				<fileset refid="test.classes" />
				<formatter type="xml" usefile="yes" />
			</batchtest>
		</junit>
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}/xml">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${report.dir}"/>
		</junitreport>
		<delete dir="${report.dir}/xml" quiet="true" />
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" quiet="true" />
		<delete dir="${report.dir}" quiet="true" />
	</target>

	<target name="init">
		<tstamp />
	</target>
</project>
